<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="163"><g><title>ntdll`LdrGetDllHandleEx (2 samples, 1.23%)</title><rect x="0.0000%" y="309" width="1.2270%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="319.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 1.23%)</title><rect x="0.0000%" y="293" width="1.2270%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="303.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 1.23%)</title><rect x="0.0000%" y="277" width="1.2270%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="287.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (1 samples, 0.61%)</title><rect x="1.2270%" y="309" width="0.6135%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="1.4770%" y="319.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.61%)</title><rect x="1.2270%" y="293" width="0.6135%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="1.4770%" y="303.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.61%)</title><rect x="1.2270%" y="277" width="0.6135%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="1.4770%" y="287.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (1 samples, 0.61%)</title><rect x="1.8405%" y="309" width="0.6135%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="2.0905%" y="319.50"></text></g><g><title>ntdll`LdrCallEnclave (1 samples, 0.61%)</title><rect x="1.8405%" y="293" width="0.6135%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="2.0905%" y="303.50"></text></g><g><title>ntdll`RtlQueryActivationContextApplicationSettings (1 samples, 0.61%)</title><rect x="1.8405%" y="277" width="0.6135%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="2.0905%" y="287.50"></text></g><g><title>ntdll`RtlFindActivationContextSectionString (1 samples, 0.61%)</title><rect x="1.8405%" y="261" width="0.6135%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="2.0905%" y="271.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 1.23%)</title><rect x="2.4540%" y="197" width="1.2270%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="2"/><text x="2.7040%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.61%)</title><rect x="3.6810%" y="197" width="0.6135%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="3.9310%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.61%)</title><rect x="3.6810%" y="181" width="0.6135%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="3.9310%" y="191.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.61%)</title><rect x="3.6810%" y="165" width="0.6135%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="3.9310%" y="175.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.61%)</title><rect x="3.6810%" y="149" width="0.6135%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="3.9310%" y="159.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.61%)</title><rect x="3.6810%" y="133" width="0.6135%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="3.9310%" y="143.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (4 samples, 2.45%)</title><rect x="2.4540%" y="261" width="2.4540%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="4"/><text x="2.7040%" y="271.50">nt..</text></g><g><title>ntdll`LdrAddRefDll (4 samples, 2.45%)</title><rect x="2.4540%" y="245" width="2.4540%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="4"/><text x="2.7040%" y="255.50">nt..</text></g><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 2.45%)</title><rect x="2.4540%" y="229" width="2.4540%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="4"/><text x="2.7040%" y="239.50">nt..</text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 2.45%)</title><rect x="2.4540%" y="213" width="2.4540%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="4"/><text x="2.7040%" y="223.50">nt..</text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.61%)</title><rect x="4.2945%" y="197" width="0.6135%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="4.5445%" y="207.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.61%)</title><rect x="4.2945%" y="181" width="0.6135%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="4.5445%" y="191.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="4.2945%" y="165" width="0.6135%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="4.5445%" y="175.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="4.2945%" y="149" width="0.6135%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="4.5445%" y="159.50"></text></g><g><title>ntdll`RtlCompareUnicodeStrings (1 samples, 0.61%)</title><rect x="4.2945%" y="133" width="0.6135%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="4.5445%" y="143.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.61%)</title><rect x="4.9080%" y="133" width="0.6135%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="5.1580%" y="143.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.61%)</title><rect x="4.9080%" y="117" width="0.6135%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="5.1580%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.61%)</title><rect x="4.9080%" y="101" width="0.6135%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="5.1580%" y="111.50"></text></g><g><title>KernelBase`GetStagedPackageOrigin (1 samples, 0.61%)</title><rect x="5.5215%" y="133" width="0.6135%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="5.7715%" y="143.50"></text></g><g><title>KernelBase`GetStagedPackageOrigin (1 samples, 0.61%)</title><rect x="5.5215%" y="117" width="0.6135%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="5.7715%" y="127.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 0.61%)</title><rect x="5.5215%" y="101" width="0.6135%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="5.7715%" y="111.50"></text></g><g><title>KernelBase`CreateMutexExW (1 samples, 0.61%)</title><rect x="5.5215%" y="85" width="0.6135%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="5.7715%" y="95.50"></text></g><g><title>KernelBase`BaseGetNamedObjectDirectory (1 samples, 0.61%)</title><rect x="5.5215%" y="69" width="0.6135%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="5.7715%" y="79.50"></text></g><g><title>KernelBase`IsWellKnownSid (1 samples, 0.61%)</title><rect x="5.5215%" y="53" width="0.6135%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="5.7715%" y="63.50"></text></g><g><title>ntdll`NtOpenDirectoryObject (1 samples, 0.61%)</title><rect x="5.5215%" y="37" width="0.6135%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="5.7715%" y="47.50"></text></g><g><title>KernelBase`GetCPHashNode (3 samples, 1.84%)</title><rect x="4.9080%" y="149" width="1.8405%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="3"/><text x="5.1580%" y="159.50">K..</text></g><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.61%)</title><rect x="6.1350%" y="133" width="0.6135%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="6.3850%" y="143.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.61%)</title><rect x="6.1350%" y="117" width="0.6135%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="6.3850%" y="127.50"></text></g><g><title>ntdll`ZwConnectPort (1 samples, 0.61%)</title><rect x="6.1350%" y="101" width="0.6135%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="6.3850%" y="111.50"></text></g><g><title>KernelBase`GetProcessHeap (4 samples, 2.45%)</title><rect x="4.9080%" y="165" width="2.4540%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="4"/><text x="5.1580%" y="175.50">Ke..</text></g><g><title>KernelBase`PathIsFileSpecW (1 samples, 0.61%)</title><rect x="6.7485%" y="149" width="0.6135%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="6.9985%" y="159.50"></text></g><g><title>KernelBase`PathIsFileSpecW (1 samples, 0.61%)</title><rect x="6.7485%" y="133" width="0.6135%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="1"/><text x="6.9985%" y="143.50"></text></g><g><title>KernelBase`GetProcessHeap (1 samples, 0.61%)</title><rect x="6.7485%" y="117" width="0.6135%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="1"/><text x="6.9985%" y="127.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (1 samples, 0.61%)</title><rect x="6.7485%" y="101" width="0.6135%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="1"/><text x="6.9985%" y="111.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (1 samples, 0.61%)</title><rect x="6.7485%" y="85" width="0.6135%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="1"/><text x="6.9985%" y="95.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.61%)</title><rect x="6.7485%" y="69" width="0.6135%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="1"/><text x="6.9985%" y="79.50"></text></g><g><title>ntdll`LdrLoadDll (9 samples, 5.52%)</title><rect x="2.4540%" y="309" width="5.5215%" height="15" fill="rgb(218,138,4)" fg:x="4" fg:w="9"/><text x="2.7040%" y="319.50">ntdll`L..</text></g><g><title>ntdll`RtlUnicodeToCustomCPN (9 samples, 5.52%)</title><rect x="2.4540%" y="293" width="5.5215%" height="15" fill="rgb(250,191,14)" fg:x="4" fg:w="9"/><text x="2.7040%" y="303.50">ntdll`R..</text></g><g><title>ntdll`RtlImageRvaToSection (9 samples, 5.52%)</title><rect x="2.4540%" y="277" width="5.5215%" height="15" fill="rgb(239,60,40)" fg:x="4" fg:w="9"/><text x="2.7040%" y="287.50">ntdll`R..</text></g><g><title>ntdll`RtlCopyUnicodeString (5 samples, 3.07%)</title><rect x="4.9080%" y="261" width="3.0675%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="5"/><text x="5.1580%" y="271.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 3.07%)</title><rect x="4.9080%" y="245" width="3.0675%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="5"/><text x="5.1580%" y="255.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 3.07%)</title><rect x="4.9080%" y="229" width="3.0675%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="5"/><text x="5.1580%" y="239.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 3.07%)</title><rect x="4.9080%" y="213" width="3.0675%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="5"/><text x="5.1580%" y="223.50">ntd..</text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (5 samples, 3.07%)</title><rect x="4.9080%" y="197" width="3.0675%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="5"/><text x="5.1580%" y="207.50">ntd..</text></g><g><title>KernelBase`GetProcessHeap (5 samples, 3.07%)</title><rect x="4.9080%" y="181" width="3.0675%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="5"/><text x="5.1580%" y="191.50">Ker..</text></g><g><title>KernelBase`time (1 samples, 0.61%)</title><rect x="7.3620%" y="165" width="0.6135%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="1"/><text x="7.6120%" y="175.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="7.9755%" y="309" width="0.6135%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="1"/><text x="8.2255%" y="319.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="7.9755%" y="293" width="0.6135%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="8.2255%" y="303.50"></text></g><g><title>ntdll`RtlDowncaseUnicodeChar (1 samples, 0.61%)</title><rect x="8.5890%" y="309" width="0.6135%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="1"/><text x="8.8390%" y="319.50"></text></g><g><title>ntdll`RtlWalkHeap (1 samples, 0.61%)</title><rect x="8.5890%" y="293" width="0.6135%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="1"/><text x="8.8390%" y="303.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.61%)</title><rect x="8.5890%" y="277" width="0.6135%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="1"/><text x="8.8390%" y="287.50"></text></g><g><title>ntdll`RtlRunOnceExecuteOnce (1 samples, 0.61%)</title><rect x="8.5890%" y="261" width="0.6135%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="1"/><text x="8.8390%" y="271.50"></text></g><g><title>ntdll`RtlGetGroupSecurityDescriptor (1 samples, 0.61%)</title><rect x="8.5890%" y="245" width="0.6135%" height="15" fill="rgb(210,229,1)" fg:x="14" fg:w="1"/><text x="8.8390%" y="255.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.61%)</title><rect x="8.5890%" y="229" width="0.6135%" height="15" fill="rgb(222,148,37)" fg:x="14" fg:w="1"/><text x="8.8390%" y="239.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.61%)</title><rect x="9.2025%" y="261" width="0.6135%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="9.4525%" y="271.50"></text></g><g><title>vcruntime140`_CxxFrameHandler3 (1 samples, 0.61%)</title><rect x="9.2025%" y="245" width="0.6135%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="9.4525%" y="255.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.61%)</title><rect x="9.2025%" y="229" width="0.6135%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="1"/><text x="9.4525%" y="239.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.61%)</title><rect x="9.2025%" y="213" width="0.6135%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="1"/><text x="9.4525%" y="223.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.61%)</title><rect x="9.2025%" y="197" width="0.6135%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="9.4525%" y="207.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.61%)</title><rect x="9.2025%" y="181" width="0.6135%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="1"/><text x="9.4525%" y="191.50"></text></g><g><title>KernelBase`LoadLibraryExW (1 samples, 0.61%)</title><rect x="9.2025%" y="165" width="0.6135%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="9.4525%" y="175.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.61%)</title><rect x="9.2025%" y="149" width="0.6135%" height="15" fill="rgb(244,35,45)" fg:x="15" fg:w="1"/><text x="9.4525%" y="159.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (1 samples, 0.61%)</title><rect x="9.2025%" y="133" width="0.6135%" height="15" fill="rgb(251,115,12)" fg:x="15" fg:w="1"/><text x="9.4525%" y="143.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="9.2025%" y="117" width="0.6135%" height="15" fill="rgb(240,54,50)" fg:x="15" fg:w="1"/><text x="9.4525%" y="127.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="9.2025%" y="101" width="0.6135%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="1"/><text x="9.4525%" y="111.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="9.2025%" y="85" width="0.6135%" height="15" fill="rgb(207,117,47)" fg:x="15" fg:w="1"/><text x="9.4525%" y="95.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.61%)</title><rect x="9.2025%" y="69" width="0.6135%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="1"/><text x="9.4525%" y="79.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (2 samples, 1.23%)</title><rect x="9.2025%" y="309" width="1.2270%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="2"/><text x="9.4525%" y="319.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (2 samples, 1.23%)</title><rect x="9.2025%" y="293" width="1.2270%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="2"/><text x="9.4525%" y="303.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (2 samples, 1.23%)</title><rect x="9.2025%" y="277" width="1.2270%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="2"/><text x="9.4525%" y="287.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.61%)</title><rect x="9.8160%" y="261" width="0.6135%" height="15" fill="rgb(211,96,35)" fg:x="16" fg:w="1"/><text x="10.0660%" y="271.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.61%)</title><rect x="9.8160%" y="245" width="0.6135%" height="15" fill="rgb(253,215,40)" fg:x="16" fg:w="1"/><text x="10.0660%" y="255.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.61%)</title><rect x="9.8160%" y="229" width="0.6135%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="10.0660%" y="239.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.61%)</title><rect x="9.8160%" y="213" width="0.6135%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="10.0660%" y="223.50"></text></g><g><title>ucrtbase`_isascii (1 samples, 0.61%)</title><rect x="9.8160%" y="197" width="0.6135%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="10.0660%" y="207.50"></text></g><g><title>ntdll`RtlIdentifierAuthoritySid (1 samples, 0.61%)</title><rect x="10.4294%" y="309" width="0.6135%" height="15" fill="rgb(237,122,38)" fg:x="17" fg:w="1"/><text x="10.6794%" y="319.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.61%)</title><rect x="10.4294%" y="293" width="0.6135%" height="15" fill="rgb(244,218,35)" fg:x="17" fg:w="1"/><text x="10.6794%" y="303.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.61%)</title><rect x="10.4294%" y="277" width="0.6135%" height="15" fill="rgb(240,68,47)" fg:x="17" fg:w="1"/><text x="10.6794%" y="287.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.61%)</title><rect x="10.4294%" y="261" width="0.6135%" height="15" fill="rgb(210,16,53)" fg:x="17" fg:w="1"/><text x="10.6794%" y="271.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.61%)</title><rect x="11.0429%" y="309" width="0.6135%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="1"/><text x="11.2929%" y="319.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.61%)</title><rect x="11.0429%" y="293" width="0.6135%" height="15" fill="rgb(224,169,11)" fg:x="18" fg:w="1"/><text x="11.2929%" y="303.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.61%)</title><rect x="11.0429%" y="277" width="0.6135%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="1"/><text x="11.2929%" y="287.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.61%)</title><rect x="11.0429%" y="261" width="0.6135%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="1"/><text x="11.2929%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="11.0429%" y="245" width="0.6135%" height="15" fill="rgb(230,116,27)" fg:x="18" fg:w="1"/><text x="11.2929%" y="255.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="11.0429%" y="229" width="0.6135%" height="15" fill="rgb(228,99,48)" fg:x="18" fg:w="1"/><text x="11.2929%" y="239.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="11.0429%" y="213" width="0.6135%" height="15" fill="rgb(253,11,6)" fg:x="18" fg:w="1"/><text x="11.2929%" y="223.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.61%)</title><rect x="11.0429%" y="197" width="0.6135%" height="15" fill="rgb(247,143,39)" fg:x="18" fg:w="1"/><text x="11.2929%" y="207.50"></text></g><g><title>ntdll`LdrInitializeThunk (20 samples, 12.27%)</title><rect x="0.0000%" y="373" width="12.2699%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="20"/><text x="0.2500%" y="383.50">ntdll`LdrInitializ..</text></g><g><title>ntdll`LdrInitializeThunk (20 samples, 12.27%)</title><rect x="0.0000%" y="357" width="12.2699%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="20"/><text x="0.2500%" y="367.50">ntdll`LdrInitializ..</text></g><g><title>ntdll`EtwLogTraceEvent (20 samples, 12.27%)</title><rect x="0.0000%" y="341" width="12.2699%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="20"/><text x="0.2500%" y="351.50">ntdll`EtwLogTraceE..</text></g><g><title>ntdll`EtwLogTraceEvent (20 samples, 12.27%)</title><rect x="0.0000%" y="325" width="12.2699%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="20"/><text x="0.2500%" y="335.50">ntdll`EtwLogTraceE..</text></g><g><title>ntdll`RtlIsMultiSessionSku (1 samples, 0.61%)</title><rect x="11.6564%" y="309" width="0.6135%" height="15" fill="rgb(242,17,10)" fg:x="19" fg:w="1"/><text x="11.9064%" y="319.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.61%)</title><rect x="11.6564%" y="293" width="0.6135%" height="15" fill="rgb(242,107,0)" fg:x="19" fg:w="1"/><text x="11.9064%" y="303.50"></text></g><g><title>advent_of_code_2021`ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a0b7ef55bc33e1aE.llvm.16922907941643829818 (12 samples, 7.36%)</title><rect x="31.9018%" y="213" width="7.3620%" height="15" fill="rgb(251,28,31)" fg:x="52" fg:w="12"/><text x="32.1518%" y="223.50">advent_of_..</text></g><g><title>advent_of_code_2021`ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a0b7ef55bc33e1aE.llvm.16922907941643829818 (29 samples, 17.79%)</title><rect x="26.3804%" y="229" width="17.7914%" height="15" fill="rgb(233,223,10)" fg:x="43" fg:w="29"/><text x="26.6304%" y="239.50">advent_of_code_2021`ZN102_$L..</text></g><g><title>advent_of_code_2021`core::num::from_str_radix (8 samples, 4.91%)</title><rect x="39.2638%" y="213" width="4.9080%" height="15" fill="rgb(215,21,27)" fg:x="64" fg:w="8"/><text x="39.5138%" y="223.50">advent..</text></g><g><title>advent_of_code_2021`ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h2bc2dfa7a86d6124E.llvm.16922907941643829818 (2 samples, 1.23%)</title><rect x="44.1718%" y="229" width="1.2270%" height="15" fill="rgb(232,23,21)" fg:x="72" fg:w="2"/><text x="44.4218%" y="239.50"></text></g><g><title>advent_of_code_2021`ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h2bc2dfa7a86d6124E.llvm.16922907941643829818 (2 samples, 1.23%)</title><rect x="44.1718%" y="213" width="1.2270%" height="15" fill="rgb(244,5,23)" fg:x="72" fg:w="2"/><text x="44.4218%" y="223.50"></text></g><g><title>advent_of_code_2021`ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h2bc2dfa7a86d6124E.llvm.16922907941643829818 (2 samples, 1.23%)</title><rect x="44.1718%" y="197" width="1.2270%" height="15" fill="rgb(226,81,46)" fg:x="72" fg:w="2"/><text x="44.4218%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 5.52%)</title><rect x="48.4663%" y="149" width="5.5215%" height="15" fill="rgb(247,70,30)" fg:x="79" fg:w="9"/><text x="48.7163%" y="159.50">ntdll`R..</text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 4.91%)</title><rect x="49.0798%" y="133" width="4.9080%" height="15" fill="rgb(212,68,19)" fg:x="80" fg:w="8"/><text x="49.3298%" y="143.50">ntdll`..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 2.45%)</title><rect x="51.5337%" y="117" width="2.4540%" height="15" fill="rgb(240,187,13)" fg:x="84" fg:w="4"/><text x="51.7837%" y="127.50">nt..</text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 1.84%)</title><rect x="53.9877%" y="133" width="1.8405%" height="15" fill="rgb(223,113,26)" fg:x="88" fg:w="3"/><text x="54.2377%" y="143.50">n..</text></g><g><title>ntdll`RtlFreeHeap (11 samples, 6.75%)</title><rect x="53.9877%" y="149" width="6.7485%" height="15" fill="rgb(206,192,2)" fg:x="88" fg:w="11"/><text x="54.2377%" y="159.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlMoveMemory (8 samples, 4.91%)</title><rect x="55.8282%" y="133" width="4.9080%" height="15" fill="rgb(241,108,4)" fg:x="91" fg:w="8"/><text x="56.0782%" y="143.50">ntdll`..</text></g><g><title>advent_of_code_2021`ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd422fc8f486be1bdE.llvm.17728465744023016711 (26 samples, 15.95%)</title><rect x="45.3988%" y="229" width="15.9509%" height="15" fill="rgb(247,173,49)" fg:x="74" fg:w="26"/><text x="45.6488%" y="239.50">advent_of_code_2021`ZN5al..</text></g><g><title>advent_of_code_2021`__ImageBase (26 samples, 15.95%)</title><rect x="45.3988%" y="213" width="15.9509%" height="15" fill="rgb(224,114,35)" fg:x="74" fg:w="26"/><text x="45.6488%" y="223.50">advent_of_code_2021`__Ima..</text></g><g><title>ntdll`RtlReAllocateHeap (26 samples, 15.95%)</title><rect x="45.3988%" y="197" width="15.9509%" height="15" fill="rgb(245,159,27)" fg:x="74" fg:w="26"/><text x="45.6488%" y="207.50">ntdll`RtlReAllocateHeap</text></g><g><title>ntdll`RtlReAllocateHeap (25 samples, 15.34%)</title><rect x="46.0123%" y="181" width="15.3374%" height="15" fill="rgb(245,172,44)" fg:x="75" fg:w="25"/><text x="46.2623%" y="191.50">ntdll`RtlReAllocateHeap</text></g><g><title>ntdll`RtlReAllocateHeap (22 samples, 13.50%)</title><rect x="47.8528%" y="165" width="13.4969%" height="15" fill="rgb(236,23,11)" fg:x="78" fg:w="22"/><text x="48.1028%" y="175.50">ntdll`RtlReAllocateH..</text></g><g><title>ntdll`RtlMoveMemory (1 samples, 0.61%)</title><rect x="60.7362%" y="149" width="0.6135%" height="15" fill="rgb(205,117,38)" fg:x="99" fg:w="1"/><text x="60.9862%" y="159.50"></text></g><g><title>advent_of_code_2021`alloc::string::impl$4::clone (14 samples, 8.59%)</title><rect x="61.3497%" y="229" width="8.5890%" height="15" fill="rgb(237,72,25)" fg:x="100" fg:w="14"/><text x="61.5997%" y="239.50">advent_of_co..</text></g><g><title>ntdll`RtlAllocateHeap (13 samples, 7.98%)</title><rect x="61.9632%" y="213" width="7.9755%" height="15" fill="rgb(244,70,9)" fg:x="101" fg:w="13"/><text x="62.2132%" y="223.50">ntdll`RtlAl..</text></g><g><title>ntdll`RtlAllocateHeap (12 samples, 7.36%)</title><rect x="62.5767%" y="197" width="7.3620%" height="15" fill="rgb(217,125,39)" fg:x="102" fg:w="12"/><text x="62.8267%" y="207.50">ntdll`RtlA..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (5 samples, 3.07%)</title><rect x="66.8712%" y="181" width="3.0675%" height="15" fill="rgb(235,36,10)" fg:x="109" fg:w="5"/><text x="67.1212%" y="191.50">ntd..</text></g><g><title>advent_of_code_2021`core::str::pattern::StrSearcher::new (1 samples, 0.61%)</title><rect x="69.9387%" y="229" width="0.6135%" height="15" fill="rgb(251,123,47)" fg:x="114" fg:w="1"/><text x="70.1887%" y="239.50"></text></g><g><title>advent_of_code_2021`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.61%)</title><rect x="70.5521%" y="229" width="0.6135%" height="15" fill="rgb(221,13,13)" fg:x="115" fg:w="1"/><text x="70.8021%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (22 samples, 13.50%)</title><rect x="71.1656%" y="229" width="13.4969%" height="15" fill="rgb(238,131,9)" fg:x="116" fg:w="22"/><text x="71.4156%" y="239.50">ntdll`RtlAllocateHeap</text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 8.59%)</title><rect x="76.0736%" y="213" width="8.5890%" height="15" fill="rgb(211,50,8)" fg:x="124" fg:w="14"/><text x="76.3236%" y="223.50">ntdll`RtlAll..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (5 samples, 3.07%)</title><rect x="81.5951%" y="197" width="3.0675%" height="15" fill="rgb(245,182,24)" fg:x="133" fg:w="5"/><text x="81.8451%" y="207.50">ntd..</text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 2.45%)</title><rect x="87.7301%" y="213" width="2.4540%" height="15" fill="rgb(242,14,37)" fg:x="143" fg:w="4"/><text x="87.9801%" y="223.50">nt..</text></g><g><title>advent_of_code_2021`ZN19advent_of_code_20219task_code6task_66part_117h44e253a82048eb6bE (133 samples, 81.60%)</title><rect x="12.8834%" y="245" width="81.5951%" height="15" fill="rgb(246,228,12)" fg:x="21" fg:w="133"/><text x="13.1334%" y="255.50">advent_of_code_2021`ZN19advent_of_code_20219task_code6task_66part_117h44e253a82048eb6bE</text></g><g><title>ntdll`RtlFreeHeap (16 samples, 9.82%)</title><rect x="84.6626%" y="229" width="9.8160%" height="15" fill="rgb(213,55,15)" fg:x="138" fg:w="16"/><text x="84.9126%" y="239.50">ntdll`RtlFreeH..</text></g><g><title>ntdll`RtlMoveMemory (7 samples, 4.29%)</title><rect x="90.1840%" y="213" width="4.2945%" height="15" fill="rgb(209,9,3)" fg:x="147" fg:w="7"/><text x="90.4340%" y="223.50">ntdll..</text></g><g><title>advent_of_code_2021`main (134 samples, 82.21%)</title><rect x="12.8834%" y="325" width="82.2086%" height="15" fill="rgb(230,59,30)" fg:x="21" fg:w="134"/><text x="13.1334%" y="335.50">advent_of_code_2021`main</text></g><g><title>advent_of_code_2021`std::rt::lang_start_internal (134 samples, 82.21%)</title><rect x="12.8834%" y="309" width="82.2086%" height="15" fill="rgb(209,121,21)" fg:x="21" fg:w="134"/><text x="13.1334%" y="319.50">advent_of_code_2021`std::rt::lang_start_internal</text></g><g><title>advent_of_code_2021`ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hff98eb9dc8e4c58bE.llvm.11315065999088041303 (134 samples, 82.21%)</title><rect x="12.8834%" y="293" width="82.2086%" height="15" fill="rgb(220,109,13)" fg:x="21" fg:w="134"/><text x="13.1334%" y="303.50">advent_of_code_2021`ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hff98eb9dc8e4c58bE.llvm.11315065999088041303</text></g><g><title>advent_of_code_2021`ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h97070e2f567e6dfeE (134 samples, 82.21%)</title><rect x="12.8834%" y="277" width="82.2086%" height="15" fill="rgb(232,18,1)" fg:x="21" fg:w="134"/><text x="13.1334%" y="287.50">advent_of_code_2021`ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h97070e2f567e6dfeE</text></g><g><title>advent_of_code_2021`ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h7baf4400e935c8e9E (134 samples, 82.21%)</title><rect x="12.8834%" y="261" width="82.2086%" height="15" fill="rgb(215,41,42)" fg:x="21" fg:w="134"/><text x="13.1334%" y="271.50">advent_of_code_2021`ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h7b..</text></g><g><title>advent_of_code_2021`std::fs::read_to_string::inner (1 samples, 0.61%)</title><rect x="94.4785%" y="245" width="0.6135%" height="15" fill="rgb(224,123,36)" fg:x="154" fg:w="1"/><text x="94.7285%" y="255.50"></text></g><g><title>advent_of_code_2021`std::sys::windows::fs::File::open (1 samples, 0.61%)</title><rect x="94.4785%" y="229" width="0.6135%" height="15" fill="rgb(240,125,3)" fg:x="154" fg:w="1"/><text x="94.7285%" y="239.50"></text></g><g><title>KernelBase`CreateFileW (1 samples, 0.61%)</title><rect x="94.4785%" y="213" width="0.6135%" height="15" fill="rgb(205,98,50)" fg:x="154" fg:w="1"/><text x="94.7285%" y="223.50"></text></g><g><title>KernelBase`CreateFileW (1 samples, 0.61%)</title><rect x="94.4785%" y="197" width="0.6135%" height="15" fill="rgb(205,185,37)" fg:x="154" fg:w="1"/><text x="94.7285%" y="207.50"></text></g><g><title>ntdll`NtCreateFile (1 samples, 0.61%)</title><rect x="94.4785%" y="181" width="0.6135%" height="15" fill="rgb(238,207,15)" fg:x="154" fg:w="1"/><text x="94.7285%" y="191.50"></text></g><g><title>kernel32`ExitProcess (1 samples, 0.61%)</title><rect x="95.0920%" y="293" width="0.6135%" height="15" fill="rgb(213,199,42)" fg:x="155" fg:w="1"/><text x="95.3420%" y="303.50"></text></g><g><title>ntdll`RtlExitUserProcess (1 samples, 0.61%)</title><rect x="95.0920%" y="277" width="0.6135%" height="15" fill="rgb(235,201,11)" fg:x="155" fg:w="1"/><text x="95.3420%" y="287.50"></text></g><g><title>ntdll`ZwTerminateProcess (1 samples, 0.61%)</title><rect x="95.0920%" y="261" width="0.6135%" height="15" fill="rgb(207,46,11)" fg:x="155" fg:w="1"/><text x="95.3420%" y="271.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (1 samples, 0.61%)</title><rect x="95.7055%" y="197" width="0.6135%" height="15" fill="rgb(241,35,35)" fg:x="156" fg:w="1"/><text x="95.9555%" y="207.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.61%)</title><rect x="95.7055%" y="181" width="0.6135%" height="15" fill="rgb(243,32,47)" fg:x="156" fg:w="1"/><text x="95.9555%" y="191.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.61%)</title><rect x="95.7055%" y="165" width="0.6135%" height="15" fill="rgb(247,202,23)" fg:x="156" fg:w="1"/><text x="95.9555%" y="175.50"></text></g><g><title>ntdll`RtlDeactivateActivationContext (1 samples, 0.61%)</title><rect x="95.7055%" y="149" width="0.6135%" height="15" fill="rgb(219,102,11)" fg:x="156" fg:w="1"/><text x="95.9555%" y="159.50"></text></g><g><title>ntdll`ZwApphelpCacheControl (1 samples, 0.61%)</title><rect x="95.7055%" y="133" width="0.6135%" height="15" fill="rgb(243,110,44)" fg:x="156" fg:w="1"/><text x="95.9555%" y="143.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="96.3190%" y="149" width="0.6135%" height="15" fill="rgb(222,74,54)" fg:x="157" fg:w="1"/><text x="96.5690%" y="159.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.61%)</title><rect x="96.3190%" y="133" width="0.6135%" height="15" fill="rgb(216,99,12)" fg:x="157" fg:w="1"/><text x="96.5690%" y="143.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.61%)</title><rect x="96.3190%" y="117" width="0.6135%" height="15" fill="rgb(226,22,26)" fg:x="157" fg:w="1"/><text x="96.5690%" y="127.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.61%)</title><rect x="96.3190%" y="101" width="0.6135%" height="15" fill="rgb(217,163,10)" fg:x="157" fg:w="1"/><text x="96.5690%" y="111.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.61%)</title><rect x="96.3190%" y="85" width="0.6135%" height="15" fill="rgb(213,25,53)" fg:x="157" fg:w="1"/><text x="96.5690%" y="95.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="96.3190%" y="69" width="0.6135%" height="15" fill="rgb(252,105,26)" fg:x="157" fg:w="1"/><text x="96.5690%" y="79.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="96.3190%" y="53" width="0.6135%" height="15" fill="rgb(220,39,43)" fg:x="157" fg:w="1"/><text x="96.5690%" y="63.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="96.3190%" y="37" width="0.6135%" height="15" fill="rgb(229,68,48)" fg:x="157" fg:w="1"/><text x="96.5690%" y="47.50"></text></g><g><title>ucrtbase`exit (4 samples, 2.45%)</title><rect x="95.0920%" y="325" width="2.4540%" height="15" fill="rgb(252,8,32)" fg:x="155" fg:w="4"/><text x="95.3420%" y="335.50">uc..</text></g><g><title>ucrtbase`exit (4 samples, 2.45%)</title><rect x="95.0920%" y="309" width="2.4540%" height="15" fill="rgb(223,20,43)" fg:x="155" fg:w="4"/><text x="95.3420%" y="319.50">uc..</text></g><g><title>ucrtbase`mbsicmp_l (3 samples, 1.84%)</title><rect x="95.7055%" y="293" width="1.8405%" height="15" fill="rgb(229,81,49)" fg:x="156" fg:w="3"/><text x="95.9555%" y="303.50">u..</text></g><g><title>ucrtbase`o_iswascii (3 samples, 1.84%)</title><rect x="95.7055%" y="277" width="1.8405%" height="15" fill="rgb(236,28,36)" fg:x="156" fg:w="3"/><text x="95.9555%" y="287.50">u..</text></g><g><title>KernelBase`LoadLibraryExW (3 samples, 1.84%)</title><rect x="95.7055%" y="261" width="1.8405%" height="15" fill="rgb(249,185,26)" fg:x="156" fg:w="3"/><text x="95.9555%" y="271.50">K..</text></g><g><title>ntdll`LdrLoadDll (3 samples, 1.84%)</title><rect x="95.7055%" y="245" width="1.8405%" height="15" fill="rgb(249,174,33)" fg:x="156" fg:w="3"/><text x="95.9555%" y="255.50">n..</text></g><g><title>ntdll`RtlUnicodeToCustomCPN (3 samples, 1.84%)</title><rect x="95.7055%" y="229" width="1.8405%" height="15" fill="rgb(233,201,37)" fg:x="156" fg:w="3"/><text x="95.9555%" y="239.50">n..</text></g><g><title>ntdll`RtlImageRvaToSection (3 samples, 1.84%)</title><rect x="95.7055%" y="213" width="1.8405%" height="15" fill="rgb(221,78,26)" fg:x="156" fg:w="3"/><text x="95.9555%" y="223.50">n..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 1.23%)</title><rect x="96.3190%" y="197" width="1.2270%" height="15" fill="rgb(250,127,30)" fg:x="157" fg:w="2"/><text x="96.5690%" y="207.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 1.23%)</title><rect x="96.3190%" y="181" width="1.2270%" height="15" fill="rgb(230,49,44)" fg:x="157" fg:w="2"/><text x="96.5690%" y="191.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 1.23%)</title><rect x="96.3190%" y="165" width="1.2270%" height="15" fill="rgb(229,67,23)" fg:x="157" fg:w="2"/><text x="96.5690%" y="175.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.61%)</title><rect x="96.9325%" y="149" width="0.6135%" height="15" fill="rgb(249,83,47)" fg:x="158" fg:w="1"/><text x="97.1825%" y="159.50"></text></g><g><title>advent_of_code_2021`__scrt_common_main_seh (139 samples, 85.28%)</title><rect x="12.8834%" y="341" width="85.2761%" height="15" fill="rgb(215,43,3)" fg:x="21" fg:w="139"/><text x="13.1334%" y="351.50">advent_of_code_2021`__scrt_common_main_seh</text></g><g><title>ucrtbase`initterm (1 samples, 0.61%)</title><rect x="97.5460%" y="325" width="0.6135%" height="15" fill="rgb(238,154,13)" fg:x="159" fg:w="1"/><text x="97.7960%" y="335.50"></text></g><g><title>advent_of_code_2021`std::sys::windows::c::WakeByAddressSingle::init (1 samples, 0.61%)</title><rect x="97.5460%" y="309" width="0.6135%" height="15" fill="rgb(219,56,2)" fg:x="159" fg:w="1"/><text x="97.7960%" y="319.50"></text></g><g><title>KernelBase`GetProcAddressForCaller (1 samples, 0.61%)</title><rect x="97.5460%" y="293" width="0.6135%" height="15" fill="rgb(233,0,4)" fg:x="159" fg:w="1"/><text x="97.7960%" y="303.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (1 samples, 0.61%)</title><rect x="97.5460%" y="277" width="0.6135%" height="15" fill="rgb(235,30,7)" fg:x="159" fg:w="1"/><text x="97.7960%" y="287.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.61%)</title><rect x="97.5460%" y="261" width="0.6135%" height="15" fill="rgb(250,79,13)" fg:x="159" fg:w="1"/><text x="97.7960%" y="271.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.61%)</title><rect x="97.5460%" y="245" width="0.6135%" height="15" fill="rgb(211,146,34)" fg:x="159" fg:w="1"/><text x="97.7960%" y="255.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.61%)</title><rect x="98.1595%" y="277" width="0.6135%" height="15" fill="rgb(228,22,38)" fg:x="160" fg:w="1"/><text x="98.4095%" y="287.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (1 samples, 0.61%)</title><rect x="98.7730%" y="261" width="0.6135%" height="15" fill="rgb(235,168,5)" fg:x="161" fg:w="1"/><text x="99.0230%" y="271.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.61%)</title><rect x="98.7730%" y="245" width="0.6135%" height="15" fill="rgb(221,155,16)" fg:x="161" fg:w="1"/><text x="99.0230%" y="255.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="98.7730%" y="229" width="0.6135%" height="15" fill="rgb(215,215,53)" fg:x="161" fg:w="1"/><text x="99.0230%" y="239.50"></text></g><g><title>ntdll`NtQueryAttributesFile (1 samples, 0.61%)</title><rect x="98.7730%" y="213" width="0.6135%" height="15" fill="rgb(223,4,10)" fg:x="161" fg:w="1"/><text x="99.0230%" y="223.50"></text></g><g><title>all (163 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="163"/><text x="0.2500%" y="399.50"></text></g><g><title>ntdll`RtlUserThreadStart (143 samples, 87.73%)</title><rect x="12.2699%" y="373" width="87.7301%" height="15" fill="rgb(227,97,0)" fg:x="20" fg:w="143"/><text x="12.5199%" y="383.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (142 samples, 87.12%)</title><rect x="12.8834%" y="357" width="87.1166%" height="15" fill="rgb(234,150,53)" fg:x="21" fg:w="142"/><text x="13.1334%" y="367.50">kernel32`BaseThreadInitThunk</text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (3 samples, 1.84%)</title><rect x="98.1595%" y="341" width="1.8405%" height="15" fill="rgb(228,201,54)" fg:x="160" fg:w="3"/><text x="98.4095%" y="351.50">n..</text></g><g><title>ntdll`EtwReplyNotification (3 samples, 1.84%)</title><rect x="98.1595%" y="325" width="1.8405%" height="15" fill="rgb(222,22,37)" fg:x="160" fg:w="3"/><text x="98.4095%" y="335.50">n..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 1.84%)</title><rect x="98.1595%" y="309" width="1.8405%" height="15" fill="rgb(237,53,32)" fg:x="160" fg:w="3"/><text x="98.4095%" y="319.50">n..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 1.84%)</title><rect x="98.1595%" y="293" width="1.8405%" height="15" fill="rgb(233,25,53)" fg:x="160" fg:w="3"/><text x="98.4095%" y="303.50">n..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 1.23%)</title><rect x="98.7730%" y="277" width="1.2270%" height="15" fill="rgb(210,40,34)" fg:x="161" fg:w="2"/><text x="99.0230%" y="287.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (1 samples, 0.61%)</title><rect x="99.3865%" y="261" width="0.6135%" height="15" fill="rgb(241,220,44)" fg:x="162" fg:w="1"/><text x="99.6365%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.61%)</title><rect x="99.3865%" y="245" width="0.6135%" height="15" fill="rgb(235,28,35)" fg:x="162" fg:w="1"/><text x="99.6365%" y="255.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="99.3865%" y="229" width="0.6135%" height="15" fill="rgb(210,56,17)" fg:x="162" fg:w="1"/><text x="99.6365%" y="239.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.61%)</title><rect x="99.3865%" y="213" width="0.6135%" height="15" fill="rgb(224,130,29)" fg:x="162" fg:w="1"/><text x="99.6365%" y="223.50"></text></g></svg></svg>